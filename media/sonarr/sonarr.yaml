apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarr-config
  namespace: media
  labels:
    app: sonarr
data:
  PUID: "1000"
  PGID: "1000"
  TZ: "America/Edmonton"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr-deployment
  namespace: media
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
      namespace: media
    spec:
      restartPolicy: Always
      containers:
      - name: sonarr
        image: linuxserver/sonarr:latest
        # resources:
        #   requests:
        #     memory: 2Gi
        #     cpu: 200m
        #   limits:
        #     memory: 4Gi
        #     cpu: 500m
        envFrom:
          - configMapRef:
              name: sonarr-config
        ports:
          - name: http-web
            protocol: TCP
            containerPort: 8989
        volumeMounts:
          - mountPath: "/config"
            name: sonarr-data
          - mountPath: "/mnt/media"
            name: shared-media
      volumes:
        - name: sonarr-data
          persistentVolumeClaim:
            claimName: sonarr-data-pvc
        - name: shared-media
          persistentVolumeClaim:
            claimName: shared-media-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-data-pvc
  namespace: media
  labels:
    app: sonarr
spec:
  storageClassName: nfs-client
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr-tcp
  namespace: media
  labels:
    app: sonarr
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.204
  externalTrafficPolicy: Local
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http-web
    - name: http-web
      protocol: TCP
      port: 8989
      targetPort: http-web
  selector:
    app: sonarr
